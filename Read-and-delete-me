* Edit the help file skeletons in 'man', possibly combining help files for multiple functions.
* Edit the exports in 'NAMESPACE', and add necessary imports.
* Put any C/C++/Fortran code in 'src'.
* If you have compiled code, add a useDynLib() directive to 'NAMESPACE'.
* Run R CMD build to build the package tarball.
* Run R CMD check to check the package tarball.

Read "Writing R Extensions" for more information.


Stan specific notes:

* Be sure to add useDynLib(mypackage, .registration = TRUE) to the NAMESPACE file, 
which you can do by placing the line   #' @useDynLib anRpackage .registration = TRUE 
in one of your .R files (e.g., see rstanarm's 'rstanarm-package.R' file).
* Be sure to import all of Rcpp and methods in the NAMESPACE file.
* You can put into src/stan_files/chunks any file that is needed by any .stan file in src/stan_files, 
* You can put into inst/include any C++ files that are needed by any .stan file in src/stan_files, 
but be sure to #include your C++ files in inst/include/meta_header.hpp
* The precompiled stanmodel objects will appear in a named list called 'stanmodels', 
and you can call them with something like rstan::sampling(stanmodels$foo, ...)
